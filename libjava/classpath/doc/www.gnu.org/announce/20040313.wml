#!wml --include=..

#use wml::std::page
#use wml::std::lang
#use wml::fmt::isolatin
#use wml::std::case global=upper

<lang:new id=en short>
<lang:star:slice:>

<set-var last-modified-author="prr">

#include <include/macros.wml>

<header title="<en>GNU Classpath 0.08 Announcement (2004-03-15)</en>"> 
<pre>
We are pleased to announce a new development release of GNU Classpath.

GNU Classpath, Essential Libraries for Java, is a project to create free
core class libraries for use with virtual machines and compilers for the
java programming language.

GNU Classpath 0.08 can be downloaded from
ftp://ftp.gnu.org/pub/gnu/classpath/
or one of the ftp.gnu.org mirrors
http://www.gnu.org/order/ftp.html

File: classpath-0.08.tar.gz<br>
MD5sum: 17f200744c31f36fdbe15347745562fb

New in GNU Classpath 0.08:

* java.util.regexp implementation through gnu.regexp wrappers.
* java.net.URI implementation.
* Working implementation of javax.swing.undo.
* java.awt.geom.CubicCurve2D/QuadCurve2D: Can now solve cubic and
  quadratic equations; implementation adapted from the GNU Scientific
  Library.
* Lots of java.awt and gtk+ peer improvements. Also more Swing work.
  Start of EmbeddedWindow support.
* BufferedReader speed improvements.
* Improved useabilty of java.text implementation for several
  applications.
* ObjectInputStream is much faster and more compatible with other
  implementations.
* Fix handling of alias methods, where a method has been deprecated in
  favour of a new one with the same funtion but a different name.
  (See Deprecated Methods section in the GNU Classpath Hacking Guide.)
* javax.print.attribute.standard added.
* Lots of java.nio, java.net, java.io fixes and updates.
* Depend on autoconf 2.59+ and automake 1.7+, GCJ 3.3+, jikes 1.18+.
 
VM Interface changes:
* Split native methods in java.lang.Runtime into java.lang.VMRuntime.
* Resources are now also loaded/needed through the bootstrap classloader
  (gnu.regexp needs MessageBundle included in glibj.zip
 
Fixed Classpath bugs:
  #6095 java.awt.geom.QuadCurve2D.solveQuadratic sometimes gives
        wrong results
  #7099 EventListenerList.getListenerCount should accept null argument
  #7104 EventListenerList.add does not work
  #7105 EventListenerList.remove does not work
  #7107 DefaultBoundedRangeModel.setValue and friends should not throw
  And lots more.

Here are answers to some questions you might have about this project and
this release.

1). What is required to build/install/run?

GNU Classpath requires a working GNU build environment and a byte code
compiler such as jikes, gcj or kjc. When creating native code you will
also need a working C compiler and up to date Gnome development
libraries (gtk+, libart and gdk-pixbuf). More information on the
precise version numbers for the tools and libraries can be found in
the INSTALL file.

A list of virtual machines and compilers known to work with GNU
Classpath can be found at our website:
http://www.gnu.org/software/classpath/stories.htm

2). What platforms are supported?

GNU/Linux is the only platform that has been tested.
We plan to eventually support many others.

3). Who should use this software?

Although GNU Classpath is already capable of supporting many
applications written in the java programming language, this is a
development release. As such, there are still some unfinished
components, and some problems are to be expected. You should install it
if you are interested in GNU Classpath development or reporting bugs.
We appreciate both.

A good overview of the current status can be found on the GNU Classpath
at FOSDEM'04 page which describes the last GNU Classpath hacker meeting.
It includes reports and presentations on the current status and future
plans: http://www.gnu.org/software/classpath/events/fosdem04.html

4). Where do I go for more information?

The project home page with information on our mailing list can be
found http://www.gnu.org/software/classpath/.
</pre>

<footer>
